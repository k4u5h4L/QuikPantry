/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Address: { // root type
    address?: string | null; // String
    country?: string | null; // String
    email?: string | null; // String
    fname?: string | null; // String
    lname?: string | null; // String
    notes?: string | null; // String
    phone?: number | null; // Int
    state?: string | null; // String
    town?: string | null; // String
    zip?: number | null; // Int
  }
  Order: { // root type
    email?: string | null; // String
    productsBought?: Array<NexusGenRootTypes['ProductsBought'] | null> | null; // [ProductsBought]
  }
  Product: { // root type
    _id?: string | null; // String
    desc?: string | null; // String
    imageUrl?: string | null; // String
    name?: string | null; // String
    oldPrice?: number | null; // Int
    price?: number | null; // Int
    rating?: number | null; // Int
    reviews?: Array<NexusGenRootTypes['Review'] | null> | null; // [Review]
    stock?: boolean | null; // Boolean
    tags?: Array<string | null> | null; // [String]
  }
  ProductsBought: { // root type
    id?: string | null; // String
    imageUrl?: string | null; // String
    productName?: string | null; // String
    rating?: number | null; // Int
    tags?: Array<string | null> | null; // [String]
  }
  Query: {};
  Review: { // root type
    date?: string | null; // String
    desc?: string | null; // String
    rating?: number | null; // Int
    title?: string | null; // String
    user?: string | null; // String
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Address: { // field return type
    address: string | null; // String
    country: string | null; // String
    email: string | null; // String
    fname: string | null; // String
    lname: string | null; // String
    notes: string | null; // String
    phone: number | null; // Int
    state: string | null; // String
    town: string | null; // String
    zip: number | null; // Int
  }
  Order: { // field return type
    email: string | null; // String
    productsBought: Array<NexusGenRootTypes['ProductsBought'] | null> | null; // [ProductsBought]
  }
  Product: { // field return type
    _id: string | null; // String
    desc: string | null; // String
    imageUrl: string | null; // String
    name: string | null; // String
    oldPrice: number | null; // Int
    price: number | null; // Int
    rating: number | null; // Int
    reviews: Array<NexusGenRootTypes['Review'] | null> | null; // [Review]
    stock: boolean | null; // Boolean
    tags: Array<string | null> | null; // [String]
  }
  ProductsBought: { // field return type
    id: string | null; // String
    imageUrl: string | null; // String
    productName: string | null; // String
    rating: number | null; // Int
    tags: Array<string | null> | null; // [String]
  }
  Query: { // field return type
    AddressByEmail: NexusGenRootTypes['Address'] | null; // Address
    OrderByEmail: NexusGenRootTypes['Order'] | null; // Order
    Products: Array<NexusGenRootTypes['Product'] | null> | null; // [Product]
  }
  Review: { // field return type
    date: string | null; // String
    desc: string | null; // String
    rating: number | null; // Int
    title: string | null; // String
    user: string | null; // String
  }
}

export interface NexusGenFieldTypeNames {
  Address: { // field return type name
    address: 'String'
    country: 'String'
    email: 'String'
    fname: 'String'
    lname: 'String'
    notes: 'String'
    phone: 'Int'
    state: 'String'
    town: 'String'
    zip: 'Int'
  }
  Order: { // field return type name
    email: 'String'
    productsBought: 'ProductsBought'
  }
  Product: { // field return type name
    _id: 'String'
    desc: 'String'
    imageUrl: 'String'
    name: 'String'
    oldPrice: 'Int'
    price: 'Int'
    rating: 'Int'
    reviews: 'Review'
    stock: 'Boolean'
    tags: 'String'
  }
  ProductsBought: { // field return type name
    id: 'String'
    imageUrl: 'String'
    productName: 'String'
    rating: 'Int'
    tags: 'String'
  }
  Query: { // field return type name
    AddressByEmail: 'Address'
    OrderByEmail: 'Order'
    Products: 'Product'
  }
  Review: { // field return type name
    date: 'String'
    desc: 'String'
    rating: 'Int'
    title: 'String'
    user: 'String'
  }
}

export interface NexusGenArgTypes {
  Query: {
    AddressByEmail: { // args
      email?: string | null; // ID
    }
    OrderByEmail: { // args
      email?: string | null; // ID
    }
    Products: { // args
      first?: number | null; // Int
      limit?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}